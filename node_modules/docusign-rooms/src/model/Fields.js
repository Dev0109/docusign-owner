/*
 * DocuSign Rooms API - v2
 * An API for an integrator to access the features of DocuSign Rooms
 *
 * OpenAPI spec version: v2
 * Contact: devcenter@docusign.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CustomData', 'model/Field', 'model/FieldConfiguration'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CustomData'), require('./Field'), require('./FieldConfiguration'));
  } else {
    // Browser globals (root is window)
    if (!root.Docusign) {
      root.Docusign = {};
    }
    root.Docusign.Fields = factory(root.Docusign.ApiClient, root.Docusign.CustomData, root.Docusign.Field, root.Docusign.FieldConfiguration);
  }
}(this, function(ApiClient, CustomData, Field, FieldConfiguration) {
  'use strict';

  /**
   * The Fields model module.
   * @module model/Fields
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>Fields</code>.
   * The fields resource provides a method that enables you to retrieve a specific field set. This is a set of fields that can appear on a room's **Details** tab.
   * @alias module:model/Fields
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Fields</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Fields} obj Optional instance to populate.
   * @return {module:model/Fields} The populated <code>Fields</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('fieldId'))
        obj.fieldId = ApiClient.convertToType(data['fieldId'], 'String');
      if (data.hasOwnProperty('fieldDefinitionId'))
        obj.fieldDefinitionId = ApiClient.convertToType(data['fieldDefinitionId'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('apiName'))
        obj.apiName = ApiClient.convertToType(data['apiName'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('fields'))
        obj.fields = ApiClient.convertToType(data['fields'], [Field]);
      if (data.hasOwnProperty('configuration'))
        obj.configuration = FieldConfiguration.constructFromObject(data['configuration']);
      if (data.hasOwnProperty('customData'))
        obj.customData = CustomData.constructFromObject(data['customData']);
    }
    return obj;
  }

  /**
   * The id of the field.  Example: `10318d28-xxxx-xxxx-xxxx-d3df664f602c` 
   * @member {String} fieldId
   */
  exports.prototype.fieldId = undefined;

  /**
   * The id of the DocuSign field definition from which this field derives. When an Admin user configures a field set by using the API, this is the id that they use to add this field definition to the field set. The original field definition associated with this id contains more information about the field, such as the default title, default API name, and configurations such as the maximum length or the maximum value allowed.
   * @member {String} fieldDefinitionId
   */
  exports.prototype.fieldDefinitionId = undefined;

  /**
   * 
   * @member {String} title
   */
  exports.prototype.title = undefined;

  /**
   * The name that the Rooms API uses for the field.   Example: `companyContactName`  **Note**: When you create a new room, you use the `apiName` values for fields to specify the details that you want to appear on the room's **Details** tab.
   * @member {String} apiName
   */
  exports.prototype.apiName = undefined;

  /**
   * 
   * @member {String} type
   */
  exports.prototype.type = undefined;

  /**
   * An array of fields.
   * @member {Array.<module:model/Field>} fields
   */
  exports.prototype.fields = undefined;

  /**
   * Contains information about how the field is configured, such as the maximum length.
   * @member {module:model/FieldConfiguration} configuration
   */
  exports.prototype.configuration = undefined;

  /**
   * 
   * @member {module:model/CustomData} customData
   */
  exports.prototype.customData = undefined;

  return exports;

}));
