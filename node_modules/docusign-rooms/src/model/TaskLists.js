/*
 * DocuSign Rooms API - v2
 * An API for an integrator to access the features of DocuSign Rooms
 *
 * OpenAPI spec version: v2
 * Contact: devcenter@docusign.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TaskSummary'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TaskSummary'));
  } else {
    // Browser globals (root is window)
    if (!root.Docusign) {
      root.Docusign = {};
    }
    root.Docusign.TaskLists = factory(root.Docusign.ApiClient, root.Docusign.TaskSummary);
  }
}(this, function(ApiClient, TaskSummary) {
  'use strict';

  /**
   * The TaskLists model module.
   * @module model/TaskLists
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>TaskLists</code>.
   * The `TaskLists` resource helps you keep track of the documents and activities you must complete before you can close a room.
   * @alias module:model/TaskLists
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>TaskLists</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TaskLists} obj Optional instance to populate.
   * @return {module:model/TaskLists} The populated <code>TaskLists</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('taskListId'))
        obj.taskListId = ApiClient.convertToType(data['taskListId'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('taskListTemplateId'))
        obj.taskListTemplateId = ApiClient.convertToType(data['taskListTemplateId'], 'Number');
      if (data.hasOwnProperty('submittedForReviewDate'))
        obj.submittedForReviewDate = ApiClient.convertToType(data['submittedForReviewDate'], 'Date');
      if (data.hasOwnProperty('approvalDate'))
        obj.approvalDate = ApiClient.convertToType(data['approvalDate'], 'Date');
      if (data.hasOwnProperty('rejectedDate'))
        obj.rejectedDate = ApiClient.convertToType(data['rejectedDate'], 'Date');
      if (data.hasOwnProperty('createdDate'))
        obj.createdDate = ApiClient.convertToType(data['createdDate'], 'Date');
      if (data.hasOwnProperty('approvedByUserId'))
        obj.approvedByUserId = ApiClient.convertToType(data['approvedByUserId'], 'Number');
      if (data.hasOwnProperty('rejectedByUserId'))
        obj.rejectedByUserId = ApiClient.convertToType(data['rejectedByUserId'], 'Number');
      if (data.hasOwnProperty('comment'))
        obj.comment = ApiClient.convertToType(data['comment'], 'String');
      if (data.hasOwnProperty('tasks'))
        obj.tasks = ApiClient.convertToType(data['tasks'], [TaskSummary]);
    }
    return obj;
  }

  /**
   * The id of the task list.
   * @member {Number} taskListId
   */
  exports.prototype.taskListId = undefined;

  /**
   * The name of the office.
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * The id of the task list template.
   * @member {Number} taskListTemplateId
   */
  exports.prototype.taskListTemplateId = undefined;

  /**
   * The UTC DateTime when the room was submitted for review.  **Note**: In Rooms v5, this is when an agent submitted the room to a manager. In Rooms v6, this is when a member with a role for which the **Submit rooms for review** permission is set to **true** submitted the room to a member with a role for which the **Review and close rooms** permission is set to **true**.
   * @member {Date} submittedForReviewDate
   */
  exports.prototype.submittedForReviewDate = undefined;

  /**
   * 
   * @member {Date} approvalDate
   */
  exports.prototype.approvalDate = undefined;

  /**
   * The date on which the reviewer rejected the room. For example, a reviewer might reject closing a room if documentation is missing or the details are inaccurate.
   * @member {Date} rejectedDate
   */
  exports.prototype.rejectedDate = undefined;

  /**
   * The UTC date and time when the item was created. This is a read-only value that the service assigns.  Example: `2019-07-17T17:45:42.783Z`  
   * @member {Date} createdDate
   */
  exports.prototype.createdDate = undefined;

  /**
   * 
   * @member {Number} approvedByUserId
   */
  exports.prototype.approvedByUserId = undefined;

  /**
   * The id of the user who rejected the room.
   * @member {Number} rejectedByUserId
   */
  exports.prototype.rejectedByUserId = undefined;

  /**
   * 
   * @member {String} comment
   */
  exports.prototype.comment = undefined;

  /**
   * A list of tasks in the task list.
   * @member {Array.<module:model/TaskSummary>} tasks
   */
  exports.prototype.tasks = undefined;

  return exports;

}));
